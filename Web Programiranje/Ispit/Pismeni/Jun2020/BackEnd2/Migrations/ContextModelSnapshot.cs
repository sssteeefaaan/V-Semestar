// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd2.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BackEnd.Models.Igrac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("ATP")
                        .HasColumnType("int")
                        .HasColumnName("ATP");

                    b.Property<int>("Godine")
                        .HasColumnType("int")
                        .HasColumnName("Godine");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ime");

                    b.Property<int>("MecID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Slika");

                    b.HasKey("ID");

                    b.HasIndex("MecID");

                    b.ToTable("Igrac");
                });

            modelBuilder.Entity("BackEnd.Models.Mec", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lokacija");

                    b.Property<int>("Max")
                        .HasColumnType("int")
                        .HasColumnName("Maksimalni broj setova");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2")
                        .HasColumnName("Vreme");

                    b.HasKey("ID");

                    b.ToTable("Mec");
                });

            modelBuilder.Entity("BackEnd.Models.Poen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("IgracID")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int")
                        .HasColumnName("Vrednost");

                    b.HasKey("ID");

                    b.HasIndex("IgracID");

                    b.ToTable("Poen");
                });

            modelBuilder.Entity("BackEnd.Models.Igrac", b =>
                {
                    b.HasOne("BackEnd.Models.Mec", null)
                        .WithMany("Igraci")
                        .HasForeignKey("MecID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd.Models.Poen", b =>
                {
                    b.HasOne("BackEnd.Models.Igrac", null)
                        .WithMany("Poeni")
                        .HasForeignKey("IgracID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd.Models.Igrac", b =>
                {
                    b.Navigation("Poeni");
                });

            modelBuilder.Entity("BackEnd.Models.Mec", b =>
                {
                    b.Navigation("Igraci");
                });
#pragma warning restore 612, 618
        }
    }
}
